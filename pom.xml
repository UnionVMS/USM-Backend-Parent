<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>eu.europa.ec.mare.oss.usm</groupId>
  <!-- Uncomment usm-parent module in backend-modules pom.xml and adapt parent 
    version in modules to the snapshot version below to test parent pom modifications -->
  <version>1.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <artifactId>USM-Backend-Parent</artifactId>
  <distributionManagement>
    <repository>
        <id>focus-releases</id>
        <name>UnionVms Repository</name>
        <url>http://nexus.focus.fish/nexus/content/repositories/releases/</url>
    </repository>
    <snapshotRepository>
        <id>focus-snapshots</id>
        <name>UnionVms Snapshot Repository</name>
        <url>http://nexus.focus.fish/nexus/content/repositories/snapshots/</url>
    </snapshotRepository>
</distributionManagement>

  <prerequisites>
    <maven>${maven.version}</maven>
  </prerequisites>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <citnetpath>webgate.ec.europa.eu/CITnet/</citnetpath>
    <svn.projectname>UNIONVMS</svn.projectname>
    <maven.build.timestamp.format>dd/MM/yyyy-HH:mm</maven.build.timestamp.format>
    <maven.version>3.2.1</maven.version>
    <docker.clean.phase>clean</docker.clean.phase>
    <docker.start.phase>process-test-resources</docker.start.phase>
    <wf.port>8080</wf.port>
    <wf.mgtport>9990</wf.mgtport>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jboss.arquillian</groupId>
        <artifactId>arquillian-bom</artifactId>
        <version>1.1.11.Final</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.jboss.spec</groupId>
      <artifactId>jboss-javaee-6.0</artifactId>
      <version>1.0.0.Final</version>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.2</version>
    </dependency>

    <dependency>
      <groupId>org.eu.ingwar.tools</groupId>
      <artifactId>arquillian-suite-extension</artifactId>
      <version>1.1.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>external.atlassian.jgitflow</groupId>
          <artifactId>jgitflow-maven-plugin</artifactId>
          <version>1.0-m5.1</version>
          <configuration>
            <flowInitContext>
             <masterBranchName>master</masterBranchName>
             <developBranchName>development</developBranchName>
             <featureBranchPrefix>feature-</featureBranchPrefix>
             <releaseBranchPrefix>release-</releaseBranchPrefix>
             <hotfixBranchPrefix>hotfix-</hotfixBranchPrefix>
           </flowInitContext>
           <username>${jgitflow.username}</username>
           <password>${jgitflow.password}</password>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.18.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.4</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <groupId>org.wildfly.plugins</groupId>
          <artifactId>wildfly-maven-plugin</artifactId>
          <version>1.1.0.Alpha1</version>
        </plugin>
        <!--This plugin's configuration is used to store Eclipse m2e settings 
          only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.cxf</groupId>
                    <artifactId>cxf-xjc-plugin</artifactId>
                    <versionRange>[2.3.0,)</versionRange>
                    <goals>
                      <goal>xsdtojava</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute>
                      <runOnConfiguration>true</runOnConfiguration>
                      <runOnIncremental>true</runOnIncremental>
                    </execute>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>0.15.2</version>
          <configuration>
            <dockerHost>https://${docker.machine.ip}:2376</dockerHost>
            <certPath>${docker.certPath}</certPath>
            <useColor>true</useColor>
            <images>
              <!-- A wildfly server image configuration -->
              <image>
                <name>wildfly-uvms</name>
                <alias>wf</alias>
                <build>
                  <dockerFileDir>Wildfly</dockerFileDir>
                  <tags>wildfly-uvms</tags>
                </build>
                <run>
                  <ports>
                    <port>8080:${wf.port}</port>
                    <port>9990:${wf.mgtport}</port>
                    <port>8787:8787</port>
                  </ports>
                  <wait>
                    <http>
                      <url>http://${docker.machine.ip}:${wf.mgtport}/management?operation=attribute&amp;name=server-state</url>
                      <status>200</status>
                    </http>
                    <log>WFLYSRV0025: WildFly.*started</log>
                    <time>30000</time>
                  </wait>
                </run>
              </image>
              <!-- wildfly server linking to a postgres docker container 
                the linked postgres container is part of the liquibase db project -->
              <image>
                <name>dblinked-wildfly-uvms</name>
                <alias>linkedwf</alias>
                <build>
                  <dockerFileDir>Wildfly</dockerFileDir>
                  <tags>db-wildfly-uvms</tags>
                </build>
                <run>
                  <ports>
                    <port>8080:${wf.port}</port>
                    <port>9990:${wf.mgtport}</port>
                    <port>8787:8787</port>
                  </ports>
                  <namingStrategy>alias</namingStrategy>
                  <links>
                    <link>usm-pg-db:db</link>
                  </links>
                  <wait>
                    <http>
                      <url>http://${docker.machine.ip}:${wf.mgtport}/management?operation=attribute&amp;name=server-state</url>
                      <status>200</status>
                    </http>
                    <log>WFLYSRV0025: WildFly.*started</log>
                    <time>30000</time>
                  </wait>
                </run>
              </image>
            </images>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.8</version>
        <configuration>
          <deployAtEnd>true</deployAtEnd>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <tagBase>https://${citnetpath}svn/${svn.projectname}/tags/USM/java</tagBase>
          <tagNameFormat>@{project.artifactId}-@{project.version}</tagNameFormat>
          <goals>deploy,site</goals>
          <preparationGoals>clean package</preparationGoals>
          <releaseProfiles>!wildfly</releaseProfiles>
          <arguments>-DskipTests</arguments>
          <autoVersionSubmodules>true</autoVersionSubmodules>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>wildfly</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <!-- Be aware this profile does get deactivated when any other profile 
          gets actived as described in http://maven.apache.org/guides/introduction/introduction-to-profiles.html 
          "All profiles that are active by default are automatically deactivated when 
          a profile in the POM is activated on the command line or through its activation 
          config." -->
      </activation>
      <properties>
        <!-- these properties can get ovewritten by setting them in your 
          maven user settings -->
        <wf.host>localhost</wf.host>
        <wf.port>8080</wf.port>
        <wf.https.port>8443</wf.https.port>
        <wf.mgtport>9990</wf.mgtport>
        <wf.adminUserName>wildfly</wf.adminUserName>
        <wf.adminPassword>wildfly123</wf.adminPassword>
      </properties>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <systemPropertyVariables>
                <arquillian.launch>wildfly-remote</arquillian.launch>
              </systemPropertyVariables>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.wildfly.plugins</groupId>
            <artifactId>wildfly-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <groupId>org.wildfly.arquillian</groupId>
          <artifactId>wildfly-arquillian-container-remote</artifactId>
          <version>1.1.0.Final</version>
          <scope>test</scope>
          <exclusions>
            <exclusion>
              <groupId>org.jboss.slf4j</groupId>
              <artifactId>slf4j-jboss-logmanager</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.protocol</groupId>
          <artifactId>arquillian-protocol-servlet</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>docker-run</id>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>clean</id>
                <phase>${docker.clean.phase}</phase>
                <goals>
                  <goal>stop</goal>
                  <goal>remove</goal>
                </goals>
                <configuration>
                  <removeAll>true</removeAll>
                  <allContainers>true</allContainers>
                </configuration>
              </execution>
              <execution>
                <id>start</id>
                <phase>${docker.start.phase}</phase>
                <goals>
                  <goal>build</goal>
                  <goal>start</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker-testdb</id>
      <properties>
        <wf.host>${docker.machine.ip}</wf.host>
        <endpoint-url>http://${wf.host}:${wf.port}/${webroot}/${restprefix}/</endpoint-url>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <image>wildfly-uvms</image>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker-linkdb</id>
      <properties>
        <wf.host>${docker.machine.ip}</wf.host>
        <endpoint-url>http://${wf.host}:${wf.port}/${webroot}/${restprefix}/</endpoint-url>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <image>linkedwf</image>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
   <profile>
      <id>jacoco</id>
      <dependencies>
        <dependency>
          <groupId>org.jacoco</groupId>
          <artifactId>org.jacoco.core</artifactId>
          <version>0.7.4.201502262128</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.extension</groupId>
          <artifactId>arquillian-jacoco</artifactId>
          <version>1.0.0.Alpha8</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.7.4.201502262128</version>
            <executions>
              <execution>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <scm>
    <connection>scm:git:https://github.com/UnionVMS/USM-Backend-Parent.git</connection>
    <url>https://bitbucket.org/mareteamint/usm-backend-parent</url>
    <tag>HEAD</tag>
  </scm>
</project>
